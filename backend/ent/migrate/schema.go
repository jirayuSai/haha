// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"github.com/facebookincubator/ent/dialect/sql/schema"
	"github.com/facebookincubator/ent/schema/field"
)

var (
	// CustomersColumns holds the columns for the "customers" table.
	CustomersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "customer_name", Type: field.TypeString},
		{Name: "address", Type: field.TypeString},
		{Name: "phone_number", Type: field.TypeString},
		{Name: "Gender_ID", Type: field.TypeInt, Nullable: true},
		{Name: "Personal_ID", Type: field.TypeInt, Nullable: true},
		{Name: "Title_ID", Type: field.TypeInt, Nullable: true},
	}
	// CustomersTable holds the schema information for the "customers" table.
	CustomersTable = &schema.Table{
		Name:       "customers",
		Columns:    CustomersColumns,
		PrimaryKey: []*schema.Column{CustomersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "customers_genders_customers",
				Columns: []*schema.Column{CustomersColumns[4]},

				RefColumns: []*schema.Column{GendersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "customers_personals_customers",
				Columns: []*schema.Column{CustomersColumns[5]},

				RefColumns: []*schema.Column{PersonalsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "customers_titles_customers",
				Columns: []*schema.Column{CustomersColumns[6]},

				RefColumns: []*schema.Column{TitlesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// GendersColumns holds the columns for the "genders" table.
	GendersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "gender_name", Type: field.TypeString, Unique: true},
	}
	// GendersTable holds the schema information for the "genders" table.
	GendersTable = &schema.Table{
		Name:        "genders",
		Columns:     GendersColumns,
		PrimaryKey:  []*schema.Column{GendersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// PersonalsColumns holds the columns for the "personals" table.
	PersonalsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "email", Type: field.TypeString},
		{Name: "password", Type: field.TypeString, Unique: true},
	}
	// PersonalsTable holds the schema information for the "personals" table.
	PersonalsTable = &schema.Table{
		Name:        "personals",
		Columns:     PersonalsColumns,
		PrimaryKey:  []*schema.Column{PersonalsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// TitlesColumns holds the columns for the "titles" table.
	TitlesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "title_name", Type: field.TypeString, Unique: true},
	}
	// TitlesTable holds the schema information for the "titles" table.
	TitlesTable = &schema.Table{
		Name:        "titles",
		Columns:     TitlesColumns,
		PrimaryKey:  []*schema.Column{TitlesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		CustomersTable,
		GendersTable,
		PersonalsTable,
		TitlesTable,
	}
)

func init() {
	CustomersTable.ForeignKeys[0].RefTable = GendersTable
	CustomersTable.ForeignKeys[1].RefTable = PersonalsTable
	CustomersTable.ForeignKeys[2].RefTable = TitlesTable
}
